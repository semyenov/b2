# Balda Game - Environment Variables Example
# Copy this file to .env and customize as needed

# =============================================================================
# Server Configuration
# =============================================================================

# HTTP server port (default: 3000)
PORT=3000

# Environment mode (development|production)
# In production mode, detailed error messages are hidden
NODE_ENV=development

# =============================================================================
# Dictionary Configuration
# =============================================================================

# Path to dictionary file (one word per line, UTF-8 encoding)
# If not set, uses permissive mode (accepts any non-empty string)
# Included: 50,910 Russian words in ./data/dictionaries/russian.txt
DICT_PATH=./data/dictionaries/russian.txt

# =============================================================================
# Storage Configuration
# =============================================================================

# Directory for file-based game storage
# Games are saved as JSON files in this directory
STORAGE_DIR=./data/games

# =============================================================================
# Database Configuration (PostgreSQL - Optional)
# =============================================================================

# PostgreSQL connection string (optional, uses file storage by default)
# Format: postgresql://user:password@host:port/database
# Example: postgresql://balda:balda@localhost:5432/balda
# Uncomment to enable PostgreSQL storage:
# DATABASE_URL=postgresql://balda:balda@localhost:5432/balda

# =============================================================================
# Authentication
# =============================================================================

# JWT secret key for access tokens
# Generate with: openssl rand -base64 32
# IMPORTANT: Change this in production!
JWT_SECRET=your-secret-key-change-in-production

# JWT refresh token secret (should be different from JWT_SECRET)
# Generate with: openssl rand -base64 32
JWT_REFRESH_SECRET=your-refresh-secret-change-in-production

# =============================================================================
# Web Frontend Configuration
# =============================================================================

# Backend API base URL (used by Vite frontend)
# Default: http://localhost:3000
VITE_API_URL=http://localhost:3000

# =============================================================================
# Monitoring & Error Tracking (Future Feature)
# =============================================================================

# Sentry DSN for backend error tracking
# Get your DSN from https://sentry.io
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry DSN for frontend error tracking
# VITE_SENTRY_DSN=https://your-frontend-sentry-dsn@sentry.io/project-id

# Sentry environment (development|staging|production)
# SENTRY_ENVIRONMENT=development

# =============================================================================
# Redis (Multi-Server Scaling - Future Feature)
# =============================================================================

# Redis connection string for WebSocket scaling across multiple servers
# Format: redis://[:password@]host:port[/db-number]
# Example: redis://localhost:6379
# REDIS_URL=redis://localhost:6379

# Redis key prefix for namespacing
# REDIS_PREFIX=balda:

# =============================================================================
# CORS Configuration (Advanced)
# =============================================================================

# Allowed CORS origins (comma-separated)
# Default: * (all origins allowed in development)
# Production example: https://balda.example.com,https://app.balda.example.com
# CORS_ORIGINS=*

# Allow credentials in CORS requests
# CORS_CREDENTIALS=true

# =============================================================================
# Rate Limiting (Advanced)
# =============================================================================

# Rate limit window in milliseconds (default: 60000 = 1 minute)
# RATE_LIMIT_WINDOW=60000

# Maximum requests per window per IP (default: 100)
# RATE_LIMIT_MAX=100

# =============================================================================
# Logging Configuration (Advanced)
# =============================================================================

# Log level (debug|info|warn|error)
# LOG_LEVEL=info

# Log format (json|pretty)
# LOG_FORMAT=pretty

# Enable request logging
# LOG_REQUESTS=true

# =============================================================================
# Development Tools
# =============================================================================

# Enable Drizzle Studio on startup (true|false)
# ENABLE_DRIZZLE_STUDIO=false

# Drizzle Studio port (default: 4983)
# DRIZZLE_STUDIO_PORT=4983
