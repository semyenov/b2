# Dockerfile for Balda API Server
FROM oven/bun:1-alpine AS base

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json bun.lock ./

# Install all dependencies (including dev dependencies for build)
RUN bun install --frozen-lockfile

# Copy source code
COPY . .

# Build the server application
RUN bun run build:server

# Production stage
FROM oven/bun:1-alpine AS production

# Install wget for health checks
RUN apk add --no-cache wget

# Set working directory
WORKDIR /app

# Copy built application and dependencies
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/dist/server ./dist/server
COPY --from=base /app/src ./src
COPY --from=base /app/package.json ./
COPY --from=base /app/balda.config.ts ./
COPY --from=base /app/tsconfig.json ./
COPY --from=base /app/tsconfig.base.json ./

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S balda -u 1001

# Change ownership of specific directories only
RUN chown -R balda:nodejs /app/src /app/dist /app/package.json /app/balda.config.ts /app/tsconfig.json /app/tsconfig.base.json
USER balda

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Start the application from source (avoids build issues)
CMD ["bun", "run", "dist/server/index.js"]
